use Game.SDL2;
use Game.Framework;

class Test {
	@framework : GameFramework;
	@colors : Color[];
	@step : Int;
	
	function : Main(args : String[]) ~ Nil {
		Test->New()->Run();
	}
	
	New() {
		@framework := GameFramework->New(GameConsts->SCREEN_WIDTH, GameConsts->SCREEN_HEIGHT, "Flower");
		@framework->SetClearColor(Color->New(0, 0, 0));
		@colors := Color->New[2];
		@colors[0] := Color->New(255,128,0); 
		@colors[1] := Color->New(255,255,25); 
	}
	
	method : Run() ~ Nil {
		if(@framework->IsOk()) {
			e := @framework->GetEvent();
			
			frame_count := 0;
			quit := false;
			while(<>quit) {
				# process input
				while(e->Poll() <> 0) {
					if(e->GetType() = EventType->SDL_QUIT) {
						quit := true;
					};
				};

				if(frame_count % GameConsts->REC_REFRESH = 0) {
					@step += 25;
					if(@step >= GameConsts->STEPS) {
						@step := GameConsts->STEPS;
					};
				};

				@framework->FrameStart();
				Render(GameConsts->SCREEN_WIDTH, 
					GameConsts->SCREEN_HEIGHT,
					0.70,GameConsts->STEPS);
				@framework->FrameEnd();

				frame_count += 1;
				if(frame_count >= @framework->GetFps()) {
					frame_count := 0;
				};
			};
		}
		else {
			"--- Error Initializing Environment ---"->ErrorLine();
			return;
		};

		leaving {
			@framework->Quit();
		};
	}

	method : Render(winWidth : Int, winHeight : Int, diskRatio : Float, iter : Int) ~ Nil {
		renderer := @framework->GetRenderer();

		@framework->Clear();

		factor := 0.42 + 1.66->Sqrt();
		x := winWidth / 2.0;
		y := winHeight / 2.0;
		maxRad := Float->Pow(iter->ToFloat(), factor) / iter;

		for(i:=0;i<=@step;i+=1;) {
			r := Float->Pow(i->ToFloat(),factor)/iter;
			color := r/maxRad < diskRatio ? @colors[0] : @colors[1];
			theta := 2*Float->Pi()*factor*i;
			renderer->CircleColor(x + r*theta->Sin(), y + r*theta->Cos(), 10 * i/(1.0*iter), color);
		};
				
		@framework->Show();
	}
}

consts GameConsts {
	SCREEN_WIDTH := 640,
	SCREEN_HEIGHT := 480,
	STEPS := 4500,
	REC_REFRESH := 5
}