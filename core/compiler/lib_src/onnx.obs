#~~
# TODO
# Copyright (c) 2025 Randy Hollines
~~#	

use System.API;

#~
TODO (-lib onnx)
~#
bundle API.Onnx {
	class Proxy {
		@lib_proxy : static : DllProxy;
		
		function : GetDllProxy() ~ DllProxy {
			if(@lib_proxy = Nil) {
				@lib_proxy := DllProxy->New("libobjk_onnx");
			};

			return @lib_proxy;
		}
	}
	
	#~
	TODO
	~#
	class OnnxRuntime {
		#~
		TODO
		~#
		function : ProcessImage(image : Byte[], resize_height : Int, resize_width, model : String) ~ Byte[] {
			if(model_name <> Nil) {
				array_args := Base->New[4];
				array_args[0] := FloatArrayRef->();
				array_args[1] := IntRef(resize_height);
				array_args[2] := IntRef(resize_width);
				array_args[3] := model;

				Proxy->GetDllProxy()->CallFunction("onnx_process_image", array_args);
				
#~
				holder := array_args[0]->As(ByteArrayRef);
				return holder->Get();
~#				
			};
			
			return Nil;
		}

		#~
		TODO
		~#
		function : ProcessImages(images : Byte[,], resize_height : Int, resize_width, model : String) ~ Byte[,] {
			return Nil;
		}
	}
}