#~~
# TODO
# Copyright (c) 2025 Randy Hollines
~~#	

use System.API;

#~
TODO (-lib onnx)
~#
bundle API.Onnx {
	class Proxy {
		@lib_proxy : static : DllProxy;
		
		function : GetDllProxy() ~ DllProxy {
			if(@lib_proxy = Nil) {
				@lib_proxy := DllProxy->New("libobjk_onnx");
			};

			return @lib_proxy;
		}
	}
	
	#~
	TODO
	~#
	class OnnxRuntime {
		#~
		TODO
		~#
		function : ProcessImage(image : Byte[], resize_height : Int, resize_width : Int, model : String) ~ Float[] {
			array_args := Base->New[5];
			array_args[0] := FloatArrayRef->New();
			array_args[1] := ByteArrayRef->New(image);
			array_args[2] := IntRef->New(resize_height);
			array_args[3] := IntRef->New(resize_width);
			array_args[4] := model;

			Proxy->GetDllProxy()->CallFunction("onnx_process_image", array_args);
				
#~
			holder := array_args[0]->As(ByteArrayRef);
			return holder->Get();
~#

			return Nil;
		}

		#~
		TODO
		~#
		function : ProcessImage(images : Byte[,], resize_height : Int, resize_width : Int, model : String) ~ Float[,] {
			return Nil;
		}
	}
}